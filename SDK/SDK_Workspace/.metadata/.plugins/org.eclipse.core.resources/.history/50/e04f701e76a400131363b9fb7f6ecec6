/*
 * Copyright (c) 2009-2012 Xilinx, Inc.  All rights reserved.
 *
 * Xilinx, Inc.
 * XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS" AS A
 * COURTESY TO YOU.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION AS
 * ONE POSSIBLE   IMPLEMENTATION OF THIS FEATURE, APPLICATION OR
 * STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS IMPLEMENTATION
 * IS FREE FROM ANY CLAIMS OF INFRINGEMENT, AND YOU ARE RESPONSIBLE
 * FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE FOR YOUR IMPLEMENTATION.
 * XILINX EXPRESSLY DISCLAIMS ANY WARRANTY WHATSOEVER WITH RESPECT TO
 * THE ADEQUACY OF THE IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO
 * ANY WARRANTIES OR REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE
 * FROM CLAIMS OF INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 *
 *
 *
 */


#include <stdio.h>
#include "platform.h"
#include "xparameters.h"
#include "xio.h"


#define VGA_PERIPH_MEM_mWriteMemory(Address, Data) \
 	XIo_Out32(Address, (Xuint32)(Data))
#define VGA_PERIPH_MEM_mReadMemory(Address) \
 	XIo_In32(Address)

#define VGA_PERIPH_mWriteReg(BaseAddress, RegOffset, Data) \
 	XIo_Out32((BaseAddress) + (RegOffset), (Xuint32)(Data))

#define VGA_PERIPH_mReadReg(BaseAddress, RegOffset) \
 	XIo_In32((BaseAddress) + (RegOffset))


void clear_text_screen(Xuint32 BaseAddress){
	int i;
	for (i = 0; i < 4800; i++){
	    VGA_PERIPH_mWriteReg(BaseAddress + 0x1000000 + i*4, 0x0, 0x20);
	}
}

void print_string(Xuint32 BaseAddress, unsigned char string_s[], int lenght){
	int i;
	for (i = 0; i < lenght; i++){
	    VGA_PERIPH_mWriteReg(BaseAddress + 0x1000000 + i*4, 0x0, (string_s[i]-0x40));
	    xil_printf("%x", string_s[i]);
	}
}



//#include "vga_periph.h"

void print(char *str);

int main()
{
	//Xuint32 value1, value2;
    init_platform();
    unsigned char string_s[] = "DRAGAN TOPALOVIC";

    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x00, 0x0, 0x0);// direct mode   0
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x04, 0x0, 0x1);// display_mode  1
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x08, 0x0, 0x1);// show frame      2
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x0C, 0x0, 0x1);// font size       3
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x10, 0x0, 0xFFFFFF);// foreground 4
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x14, 0x0, 0x0000FF);// background color 5
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x18, 0x0, 0xFF0000);// frame color      6

    print("Hello World\n\r");
    /*VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x1000000, 0x0, 0x20);
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR+4 + 0x1000000, 0x0, 0x20);
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR+8 + 0x1000000, 0x0, 0x20);*/

    clear_text_screen(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR);
    print_string(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR, string_s, 16);

    /*VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x4, 0x0, 0x11);
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x8, 0x0, 0x22);
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0xC, 0x0, 0x33);
    VGA_PERIPH_mWriteReg(XPAR_VGA_PERIPH_MEM_0_S_AXI_MEM0_BASEADDR + 0x10, 0x0, 0x20);*/

    /*VGA_PERIPH_mWriteReg (XPAR_VGA_PERIPH_0_BASEADDR, VGA_PERIPH_SLV_REG0_OFFSET, 0x0);// direct_mode
    VGA_PERIPH_mWriteReg (XPAR_VGA_PERIPH_0_BASEADDR, VGA_PERIPH_SLV_REG1_OFFSET, 0x1);// display_mode
    VGA_PERIPH_mWriteReg (XPAR_VGA_PERIPH_0_BASEADDR, VGA_PERIPH_SLV_REG3_OFFSET, 0x1);// font_size
    VGA_PERIPH_mWriteReg (XPAR_VGA_PERIPH_0_BASEADDR, VGA_PERIPH_SLV_REG4_OFFSET, 0x1);// show_frame
    VGA_PERIPH_mWriteReg (XPAR_VGA_PERIPH_0_BASEADDR, VGA_PERIPH_SLV_REG5_OFFSET, 0x00FFFF);// foreground color
    VGA_PERIPH_mWriteReg (XPAR_VGA_PERIPH_0_BASEADDR, VGA_PERIPH_SLV_REG6_OFFSET, 0x0);// background color
    VGA_PERIPH_mWriteReg (XPAR_VGA_PERIPH_0_BASEADDR, VGA_PERIPH_SLV_REG7_OFFSET, 0xFF0000);// frame color*/


    return 0;
}
